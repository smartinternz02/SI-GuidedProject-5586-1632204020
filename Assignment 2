# -*- coding: utf-8 -*-
"""
Created on Mon Sep 20 19:15:42 2021

@author: jayas
"""


import numpy as np
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import make_column_transformer
from sklearn.compose import ColumnTransformer
import pandas as pd
from sklearn.model_selection import train_test_split
import matplotlib as mp
from sklearn.metrics import r2_score
from sklearn.linear_model import LinearRegression
dataset = pd.read_csv('test.csv')



dd=dataset["Item_Weight"].fillna(dataset["Item_Weight"].mean(),inplace=True)
ddd=dataset["Outlet_Size"].fillna(dataset["Outlet_Size"].mode()[0],inplace=True)


d=dataset.isnull().any()
print(d)



dataset["Item_Fat_Content"].replace(to_replace="LF", value="Low_Fat",inplace=True)
dataset["Item_Fat_Content"].replace(to_replace="reg", value="regular",inplace=True)
dataset["Item_Fat_Content"].replace(to_replace="low fat", value="Low_Fat",inplace=True)



x= dataset.iloc[:,1:5].values
y= dataset.iloc[:,5:6].values

s=dataset["Outlet_Identifier"].unique()
print(s)

s1=dataset["Item_Type"].unique()
print(s1)


s1=dataset["Outlet_Size"].unique()
print(s1)

s1=dataset["Item_Fat_Content"].unique()
print(s1)



ct =  ColumnTransformer([("one",OneHotEncoder(),[1,3])],remainder="passthrough")
x= ct.fit_transform(x)

g=x.shape
print(x)
print(g)



x=x.toarray()




k=x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)
#print(k)


sc=StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.transform(x_test)

mlr= LinearRegression()
mlr.fit(x_train,y_train)
y_prd= mlr.predict(x_test)
print(y_prd)


acc= r2_score(y_test,y_prd)
print(acc)
